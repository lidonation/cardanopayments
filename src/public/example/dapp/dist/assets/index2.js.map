{"version":3,"mappings":"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","names":["dataUriToBuffer","uri","firstComma","meta","charset","base64","type","typeFull","i","encoding","data","buffer","global","factory","exports","this","SymbolPolyfill","description","noop","getGlobals","globals","typeIsObject","x","rethrowAssertionErrorRejection","originalPromise","originalPromiseThen","originalPromiseResolve","originalPromiseReject","newPromise","executor","promiseResolvedWith","value","promiseRejectedWith","reason","PerformPromiseThen","promise","onFulfilled","onRejected","uponPromise","uponFulfillment","uponRejection","transformPromiseWith","fulfillmentHandler","rejectionHandler","setPromiseIsHandledToTrue","queueMicrotask","globalQueueMicrotask","resolvedPromise","fn","reflectCall","F","V","args","promiseCall","QUEUE_MAX_ARRAY_SIZE","SimpleQueue","element","oldBack","newBack","oldFront","newFront","oldCursor","newCursor","elements","callback","node","front","cursor","ReadableStreamReaderGenericInitialize","reader","stream","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","ReadableStreamReaderGenericCancel","ReadableStreamCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","readerLockException","name","resolve","reject","defaultReaderClosedPromiseResolve","AbortSteps","ErrorSteps","CancelSteps","PullSteps","NumberIsFinite","MathTrunc","v","isDictionary","assertDictionary","obj","context","assertFunction","isObject","assertObject","assertRequiredArgument","position","assertRequiredField","field","convertUnrestrictedDouble","censorNegativeZero","integerPart","convertUnsignedLongLongWithEnforceRange","upperBound","assertReadableStream","IsReadableStream","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","ReadableStreamAddReadRequest","readRequest","ReadableStreamFulfillReadRequest","chunk","done","ReadableStreamGetNumReadRequests","ReadableStreamHasDefaultReader","IsReadableStreamDefaultReader","IsReadableStreamLocked","defaultReaderBrandCheckException","resolvePromise","rejectPromise","e","ReadableStreamDefaultReaderRead","AsyncIteratorPrototype","ReadableStreamAsyncIteratorImpl","preventCancel","nextSteps","returnSteps","result","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","streamAsyncIteratorBrandCheckException","AcquireReadableStreamAsyncIterator","impl","iterator","NumberIsNaN","CreateArrayFromList","CopyDataBlockBytes","dest","destOffset","src","srcOffset","n","TransferArrayBuffer","O","IsDetachedBuffer","ArrayBufferSlice","begin","end","length","slice","IsNonNegativeNumber","CloneAsUint8Array","DequeueValue","container","pair","EnqueueValueWithSize","size","PeekQueueValue","ResetQueue","ReadableStreamBYOBRequest","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","bytesWritten","ReadableByteStreamControllerRespond","view","ReadableByteStreamControllerRespondWithNewView","ReadableByteStreamController","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","ReadableByteStreamControllerGetDesiredSize","state","ReadableByteStreamControllerClose","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","entry","ReadableByteStreamControllerHandleQueueDrain","autoAllocateChunkSize","bufferE","pullIntoDescriptor","ReadableByteStreamControllerCallPullIfNeeded","controller","ReadableByteStreamControllerShouldCallPull","pullPromise","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","bytesFilled","elementSize","ReadableByteStreamControllerEnqueueChunkToQueue","byteOffset","byteLength","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","ready","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerClearAlgorithms","ReadableStreamClose","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerPullInto","readIntoRequest","ctor","ReadableStreamAddReadIntoRequest","emptyView","ReadableByteStreamControllerRespondInClosedState","firstDescriptor","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","ReadableByteStreamControllerRespondInReadableState","remainderSize","remainder","ReadableByteStreamControllerRespondInternal","transferredBuffer","firstPendingPullInto","transferredView","ReadableStreamError","byobRequest","SetUpReadableStreamBYOBRequest","viewByteLength","SetUpReadableByteStreamController","startAlgorithm","pullAlgorithm","cancelAlgorithm","highWaterMark","startResult","r","SetUpReadableByteStreamControllerFromUnderlyingSource","underlyingByteSource","request","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","IsReadableStreamBYOBReader","byobReaderBrandCheckException","ReadableStreamBYOBReaderRead","ExtractHighWaterMark","strategy","defaultHWM","ExtractSizeAlgorithm","convertQueuingStrategy","init","convertQueuingStrategySize","convertUnderlyingSink","original","abort","close","start","write","convertUnderlyingSinkAbortCallback","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","assertWritableStream","IsWritableStream","isAbortSignal","supportsAbortController","createAbortController","WritableStream","rawUnderlyingSink","rawStrategy","underlyingSink","InitializeWritableStream","sizeAlgorithm","SetUpWritableStreamDefaultControllerFromUnderlyingSink","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","CreateWritableStream","writeAlgorithm","closeAlgorithm","abortAlgorithm","WritableStreamDefaultController","_a","wasAlreadyErroring","WritableStreamStartErroring","closeRequest","writer","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerClose","WritableStreamAddWriteRequest","writeRequest","WritableStreamDealWithRejection","error","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterGetDesiredSize","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterEnsureClosedPromiseRejected","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultControllerGetDesiredSize","releasedError","chunkSize","WritableStreamDefaultControllerGetChunkSize","closeSentinel","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","WritableStreamDefaultControllerError","SetUpWritableStreamDefaultController","WritableStreamDefaultControllerGetBackpressure","startPromise","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDefaultControllerClearAlgorithms","chunkSizeE","WritableStreamDefaultControllerWrite","enqueueE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","sinkClosePromise","sinkWritePromise","NativeDOMException","isDOMExceptionConstructor","createDOMExceptionPolyfill","message","DOMException$1","ReadableStreamPipeTo","source","preventClose","preventAbort","signal","shuttingDown","currentWrite","actions","shutdownWithAction","action","pipeLoop","resolveLoop","rejectLoop","next","pipeStep","resolveRead","rejectRead","isOrBecomesErrored","shutdown","isOrBecomesClosed","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamDefaultControllerHasBackpressure","SetUpReadableStreamDefaultController","SetUpReadableStreamDefaultControllerFromUnderlyingSource","underlyingSource","ReadableStreamTee","cloneForBranch2","ReadableByteStreamTee","ReadableStreamDefaultTee","reading","readAgain","canceled1","canceled2","reason1","reason2","branch1","branch2","resolveCancelPromise","cancelPromise","chunk1","chunk2","cancel1Algorithm","compositeReason","cancelResult","cancel2Algorithm","CreateReadableStream","readAgainForBranch1","readAgainForBranch2","forwardReaderError","thisReader","pullWithDefaultReader","cloneE","pull1Algorithm","pull2Algorithm","pullWithBYOBReader","forBranch2","byobBranch","otherBranch","byobCanceled","clonedChunk","otherCanceled","CreateReadableByteStream","convertUnderlyingDefaultOrByteSource","cancel","pull","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertReaderOptions","options","mode","convertReadableStreamReaderMode","convertIteratorOptions","convertPipeOptions","assertAbortSignal","convertReadableWritablePair","readable","writable","ReadableStream","rawUnderlyingSource","InitializeReadableStream","streamBrandCheckException$1","rawOptions","rawTransform","transform","destination","branches","sourceCancelPromise","convertQueuingStrategyInit","byteLengthSizeFunction","ByteLengthQueuingStrategy","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","IsCountQueuingStrategy","countBrandCheckException","convertTransformer","flush","readableType","writableType","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","InitializeTransformStream","SetUpTransformStreamDefaultControllerFromTransformer","IsTransformStream","streamBrandCheckException","TransformStreamDefaultSinkWriteAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSourcePullAlgorithm","TransformStreamSetBackpressure","TransformStreamError","TransformStreamErrorWritableAndUnblockWrite","TransformStreamDefaultControllerClearAlgorithms","TransformStreamDefaultController","IsTransformStreamDefaultController","defaultControllerBrandCheckException","readableController","TransformStreamDefaultControllerEnqueue","TransformStreamDefaultControllerError","TransformStreamDefaultControllerTerminate","SetUpTransformStreamDefaultController","transformAlgorithm","flushAlgorithm","transformResultE","TransformStreamDefaultControllerPerformTransform","transformPromise","backpressureChangePromise","flushPromise","base64Js","toByteArray","fromByteArray","lookup","revLookup","Arr","code","len","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","ieee754","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","c","rt","require$$0","require$$1","customInspectSymbol","Buffer","SlowBuffer","K_MAX_LENGTH","typedArraySupport","proto","createBuffer","buf","arg","encodingOrOffset","allocUnsafe","from","fromString","fromArrayView","isInstance","fromArrayBuffer","valueOf","b","fromObject","assertSize","alloc","fill","checked","string","actual","fromArrayLike","array","arrayView","copy","numberIsNaN","a","y","list","pos","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","str","max","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","read","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","hexSliceLookupTable","bytes","newBuf","checkOffset","ext","noAssert","mul","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","checkInt","min","maxBytes","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","limit","sub","checkIEEE754","writeFloat","littleEndian","writeDouble","targetStart","errors","E","sym","getMessage","Base","range","input","msg","received","addNumericalSeparator","checkBounds","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","dst","alphabet","table","i16","BufferBigIntNotDefined","POOL_SIZE","process","emitWarning","require$$2","require$$3","Blob","params","blob","ctrl","toIterator","clone","part","_Blob","#parts","#type","#size","#endings","blobParts","encoder","decoder","it","relativeStart","relativeEnd","span","added","object","Blob$1","_File","#lastModified","#name","fileBits","fileName","lastModified","File","File$1","t","h","f","FormData","#d","o","l","formDataToBlob","B","C","FetchBaseError","FetchError","systemError","NAME","isURLSearchParameters","isBlob","isDomainOrSubdomain","orig","isSameProtocol","pipeline","Stream","INTERNALS","Body","body","boundary","error_","consumeBody","ct","formData","parameters","__vitePreload","toFormData","text","accum","accumBytes","instance","p1","p2","getNonSpecFormDataBoundary","extractContentType","getTotalBytes","writeToStream","validateHeaderName","http","validateHeaderValue","Headers","raw","values","method","receiver","thisArg","key","property","fromRawHeaders","headers","index","redirectStatus","isRedirect","Response","status","contentType","url","response","getSearch","parsedURL","lastOffset","hash","stripURLForUseAsAReferrer","originOnly","ReferrerPolicy","DEFAULT_REFERRER_POLICY","validateReferrerPolicy","referrerPolicy","isOriginPotentiallyTrustworthy","hostIp","hostIPVersion","isUrlPotentiallyTrustworthy","determineRequestsReferrer","policy","referrerSource","referrerURL","referrerOrigin","referrerURLCallback","referrerOriginCallback","currentURL","parseReferrerPolicyFromHeader","policyTokens","token","isRequest","doBadDataWarn","Request","inputBody","referrer","parsedReferrer","getNodeRequestOptions","contentLengthValue","totalBytes","agent","search","AbortError","port","MessageChannel","ab","err","nodeDomexception","blobFromSync","path","fromBlob","blobFrom","stat","fileFrom","fromFile","fileFromSync","BlobDataItem","#path","#start","mtimeMs","DOMException","supportedSchemas","fetch","options_","send","https","abortAndFinalize","request_","fixResponseChunkedTransferBadEnding","endedWithEventsCount","hadError","response_","location","locationURL","requestOptions","responseReferrerPolicy","responseOptions","codings","zlibOptions","zlib","errorCallback","LAST_CHUNK","isChunkedTransfer","properLastChunkReceived","previousChunk","socket","onSocketClose","onData"],"sources":["../../node_modules/data-uri-to-buffer/dist/index.js","../../node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","../../../../../../node_modules/base64-js/index.js","../../../../../../node_modules/ieee754/index.js","../../../../../../node_modules/buffer/index.js","../../node_modules/fetch-blob/streams.cjs","../../node_modules/fetch-blob/index.js","../../node_modules/fetch-blob/file.js","../../node_modules/formdata-polyfill/esm.min.js","../../node_modules/node-fetch/src/errors/base.js","../../node_modules/node-fetch/src/errors/fetch-error.js","../../node_modules/node-fetch/src/utils/is.js","../../node_modules/node-fetch/src/body.js","../../node_modules/node-fetch/src/headers.js","../../node_modules/node-fetch/src/utils/is-redirect.js","../../node_modules/node-fetch/src/response.js","../../node_modules/node-fetch/src/utils/get-search.js","../../node_modules/node-fetch/src/utils/referrer.js","../../node_modules/node-fetch/src/request.js","../../node_modules/node-fetch/src/errors/abort-error.js","../../node_modules/node-domexception/index.js","../../node_modules/fetch-blob/from.js","../../node_modules/node-fetch/src/index.js"],"sourcesContent":["/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nexport function dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nexport default dataUriToBuffer;\n//# sourceMappingURL=index.js.map","/**\n * web-streams-polyfill v3.2.1\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n}(this, (function (exports) { 'use strict';\n\n    /// <reference lib=\"es2015.symbol\" />\n    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n        Symbol :\n        description => `Symbol(${description})`;\n\n    /// <reference lib=\"dom\" />\n    function noop() {\n        return undefined;\n    }\n    function getGlobals() {\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof window !== 'undefined') {\n            return window;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    function promiseResolvedWith(value) {\n        return originalPromiseResolve(value);\n    }\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    const queueMicrotask = (() => {\n        const globalQueueMicrotask = globals && globals.queueMicrotask;\n        if (typeof globalQueueMicrotask === 'function') {\n            return globalQueueMicrotask;\n        }\n        const resolvedPromise = promiseResolvedWith(undefined);\n        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n    })();\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        if (reader._ownerReadableStream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        reader._ownerReadableStream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n    const PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('iterate'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('finish iterating'));\n            }\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    if (AsyncIteratorPrototype !== undefined) {\n        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    }\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    // Not implemented correctly\n    function TransferArrayBuffer(O) {\n        return O;\n    }\n    // Not implemented correctly\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function IsDetachedBuffer(O) {\n        return false;\n    }\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) ;\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                const entry = this._queue.shift();\n                this._queueTotalSize -= entry.byteLength;\n                ReadableByteStreamControllerHandleQueueDrain(this);\n                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n                readRequest._chunkSteps(view);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const elementSize = pullIntoDescriptor.elementSize;\n        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        if (maxAlignedBytes > currentAlignedBytes) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        let elementSize = 1;\n        if (view.constructor !== DataView) {\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\n        }\n        const ctor = view.constructor;\n        // try {\n        const buffer = TransferArrayBuffer(view.buffer);\n        // } catch (e) {\n        //   readIntoRequest._errorSteps(e);\n        //   return;\n        // }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset: view.byteOffset,\n            byteLength: view.byteLength,\n            bytesFilled: 0,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled > 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const buffer = chunk.buffer;\n        const byteOffset = chunk.byteOffset;\n        const byteLength = chunk.byteLength;\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n        }\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        if (ReadableStreamHasDefaultReader(stream)) {\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read(view) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readIntoRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let writeAlgorithm = () => promiseResolvedWith(undefined);\n        let closeAlgorithm = () => promiseResolvedWith(undefined);\n        let abortAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    function createDOMExceptionPolyfill() {\n        // eslint-disable-next-line no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line no-redeclare\n    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = new DOMException$1('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n    }\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n            value: ReadableStream.prototype.values,\n            writable: true,\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._errorSteps(e);\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n        else {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._errorSteps(e);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    try {\n        Object.defineProperty(byteLengthSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    try {\n        Object.defineProperty(countSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n            return promiseResolvedWith(undefined);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm = (chunk) => {\n            try {\n                TransformStreamDefaultControllerEnqueue(controller, chunk);\n                return promiseResolvedWith(undefined);\n            }\n            catch (transformResultE) {\n                return promiseRejectedWith(transformResultE);\n            }\n        };\n        let flushAlgorithm = () => promiseResolvedWith(undefined);\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n        // errored.\n        TransformStreamError(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        const controller = stream._transformStreamController;\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        // Return a promise that is fulfilled with undefined on success.\n        return transformPromiseWith(flushPromise, () => {\n            if (readable._state === 'errored') {\n                throw readable._storedError;\n            }\n            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n        }, r => {\n            TransformStreamError(stream, r);\n            throw readable._storedError;\n        });\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {Buffer} from 'node:buffer';\nimport {types, deprecate, promisify} from 'node:util';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n"],"file":"assets/index2.js"}